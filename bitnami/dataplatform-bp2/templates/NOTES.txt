** Data Platform Blueprint 2 is being deployed, it could take some time to be ready **

The following components are being deployed to your cluster:

{{- if .Values.kafka.enabled }}

***********
** Kafka **
***********

To access the Kafka service from your local machine execute the following:

{{- if eq .Values.kafka.service.type "LoadBalancer" }}

   export SERVICE_IP=$(kubectl get --namespace {{ .Release.Namespace }} svc {{ include "subcomponent.service.name" ( dict "componentName" "kafka" "context" $ ) }} -o jsonpath="{.status.loadBalancer.ingress[0]['ip', 'hostname'] }")
   echo http://$SERVICE_IP:9092

{{- else -}}

   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "subcomponent.service.name" ( dict "componentName" "kafka" "context" $ ) }} 9092:9092 &
   echo "Kafka service available at : http://127.0.0.1:9092"

{{- end -}}
{{- end -}}

{{- if .Values.elasticsearch.enabled }}

**********
** Elasticsearch **
**********

To access the Elasticsearch service from your local machine execute the following:

{{- if eq .Values.elasticsearch.master.service.type "LoadBalancer" }}

   export SERVICE_IP=$(kubectl get --namespace {{ .Release.Namespace }} svc {{ include "subcomponent.service.name" ( dict "componentName" "coordinating-only" "context" $ ) }} -o jsonpath="{.status.loadBalancer.ingress[0]['ip', 'hostname'] }")
   echo http://$SERVICE_IP:9200

{{- else -}}

   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "subcomponent.service.name" ( dict "componentName" "coordinating-only" "context" $ ) }} 9200:9200 &
   echo "Elasticsearch service available at : http://127.0.0.1:9200"

{{- end -}}
{{- end -}}

{{- if .Values.spark.enabled }}

***********
** Spark **
***********

To access the Spark service from your local machine execute the following:

{{- if eq .Values.spark.service.type "LoadBalancer" }}

   export SERVICE_IP=$(kubectl get --namespace {{ .Release.Namespace }} svc {{ include "subcomponent.service.name" ( dict "componentName" "spark" "context" $ ) }} -o jsonpath="{.status.loadBalancer.ingress[0]['ip', 'hostname'] }")
   echo http://$SERVICE_IP:80

{{- else -}}

   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "subcomponent.service.name" ( dict "componentName" "spark" "context" $ ) }} 8080:80 &
   echo "Spark service available at : http://127.0.0.1:8080"

{{- end -}}
{{- end -}}
