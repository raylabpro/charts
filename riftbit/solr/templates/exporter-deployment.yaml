{{- if and .Values.exporter.enabled (not .Values.authentication.enabled) }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: solr-exporter
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ include "solr.exporter-name" . }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: 1
  {{- if .Values.exporter.updateStrategy }}
  strategy: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.updateStrategy "context" $) | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: solr-exporter
  template:
    metadata:
      annotations:
        {{- if .Values.exporter.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.exporter.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: solr-exporter
        {{- if .Values.exporter.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.exporter.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "solr.serviceAccountName" . }}
      {{- include "solr.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.exporter.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.exporter.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.exporter.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.exporter.podAffinityPreset "component" "solr" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.exporter.podAntiAffinityPreset "component" "solr" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.exporter.nodeAffinityPreset.type "key" .Values.exporter.nodeAffinityPreset.key "values" .Values.exporter.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.exporter.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.exporter.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.exporter.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.exporter.priorityClassName }}
      priorityClassName: {{ .Values.exporter.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.exporter.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.exporter.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.exporter.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.exporter.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: solr-exporter
          image: {{ include "solr.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.exporter.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.exporter.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.exporter.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - "/opt/bitnami/solr/contrib/prometheus-exporter/bin/solr-exporter"
            - "-p"
            - {{ .Values.exporter.port | quote }}
            - "-z"
            - "{{ include "solr.zookeeper.host" . }}/solr"
            - "-n"
            - {{ .Values.exporter.threads | quote }}
            - "-f"
            - {{ .Values.exporter.configFile | quote }}
          {{- end }}
          {{- if .Values.exporter.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.exporter.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.exporter.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.exporter.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.exporter.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.exporter.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.exporter.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.exporter.port }}
          {{- if .Values.exporter.resources }}
          resources: {{- toYaml .Values.exporter.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.exporter.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.exporter.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: "/metrics"
              port: {{ .Values.exporter.port }}
          {{- else if .Values.exporter.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.exporter.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.exporter.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: "/metrics"
              port: {{ .Values.exporter.port }}
          {{- else if .Values.exporter.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.exporter.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.exporter.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.exporter.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.exporter.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.exporter.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        {{- if .Values.exporter.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.exporter.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{ end }}
