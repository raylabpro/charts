apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "grafana-tempo.querier.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: querier
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.querier.replicaCount }}
  {{- if .Values.querier.updateStrategy }}
  strategy: {{- toYaml .Values.querier.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: querier
  template:
    metadata:
      {{- if .Values.querier.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.querier.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: querier
        tempo-gossip-member: "true"
        {{- if .Values.querier.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.querier.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "grafana-tempo.serviceAccountName" . }}
      {{- include "grafana-tempo.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.querier.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.querier.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.querier.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.querier.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.querier.podAffinityPreset "component" "querier" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.querier.podAntiAffinityPreset "component" "querier" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.querier.nodeAffinityPreset.type "key" .Values.querier.nodeAffinityPreset.key "values" .Values.querier.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.querier.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.querier.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.querier.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.querier.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.querier.priorityClassName }}
      priorityClassName: {{ .Values.querier.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.querier.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.querier.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        {{- if .Values.querier.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.querier.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: grafana-tempo-querier
          image: {{ template "grafana-tempo.image" . }}
          imagePullPolicy: {{ .Values.tempo.image.pullPolicy }}
          {{- if .Values.querier.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.querier.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.querier.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.querier.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.querier.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.querier.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - -target=querier
            - -config.file=/bitnami/grafana-tempo/conf/tempo.yaml
            - -mem-ballast-size-mbs={{ .Values.tempo.memBallastSizeMbs }}
          {{- end }}
          {{- if .Values.querier.extraEnvVars }}
          env: {{- include "common.tplvalues.render" (dict "value" .Values.querier.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
          envFrom:
            {{- if .Values.querier.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.querier.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.querier.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.querier.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.tempo.containerPort }}
              name: http
            - containerPort: {{ .Values.tempo.gossipRing.containerPort }}
              name: http-memberlist
            - containerPort: {{ .Values.tempo.grpcContainerPort }}
              name: grpc
          {{- if .Values.querier.resources }}
          resources: {{- toYaml .Values.querier.resources | nindent 12 }}
          {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.querier.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.querier.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.querier.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.querier.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.querier.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.querier.livenessProbe.failureThreshold }}
          {{- else if .Values.querier.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.querier.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.querier.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: {{ .Values.querier.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.querier.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.querier.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.querier.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.querier.readinessProbe.failureThreshold }}
          {{- else if .Values.querier.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.querier.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.querier.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.querier.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: tempo-config
              mountPath: /bitnami/grafana-tempo/conf/tempo.yaml
              subPath: tempo.yaml
            - name: overrides-config
              mountPath: /bitnami/grafana-tempo/conf/overrides.yaml
              subPath: overrides.yaml
            - name: data
              mountPath: {{ .Values.tempo.dataDir }}
          {{- if .Values.querier.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.querier.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.querier.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.querier.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        # NOTE: The upstream chart does not create a PVC for this, we assume that it is just for tmp data
        - name: data
          emptyDir: {}
        - name: tempo-config
          configMap:
            name: {{ template "grafana-tempo.tempoConfigmapName" . }}
        - name: overrides-config
          configMap:
            name: {{ template "grafana-tempo.overridesConfigmapName" . }}
        {{- if .Values.querier.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.querier.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
