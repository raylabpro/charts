## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Bitnami Redmine image
## ref: https://hub.docker.com/r/bitnami/redmine/tags/
## @param image.registry Redmine image registry
## @param image.repository Redmine image repository
## @param image.tag Redmine image tag (immutable tags are recommended)
## @param image.pullPolicy Redmine image pull policy
## @param image.pullSecrets [array] Redmine image pull secrets
## @param image.debug Enable image debug mode
##
image:
  registry: docker.io
  repository: bitnami/redmine
  tag: 4.2.2-debian-10-r42
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName
  pullSecrets: []
  ## Enable debug mode
  ##
  debug: false

## @section Redmine Configuration parameters
## Redmine settings based on environment variables
## ref: https://github.com/bitnami/bitnami-docker-redmine#environment-variables

## @param redmineUsername Redmine username
## ref: https://github.com/bitnami/bitnami-docker-redmine#configuration
##
redmineUsername: user
## @param redminePassword Redmine user password
## Defaults to a random 10-character alphanumeric string if not set
## ref: https://github.com/bitnami/bitnami-docker-redmine#configuration
##
redminePassword: ""
## @param redmineEmail Redmine user email
## ref: https://github.com/bitnami/bitnami-docker-redmine#configuration
##
redmineEmail: user@example.com
## @param redmineLanguage Redmine default data language
## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
##
redmineLanguage: en
## @param customPostInitScripts Custom post-init.d user scripts
## ref: https://github.com/bitnami/bitnami-docker-redmine/tree/master/14.0/debian-10/rootfs/post-init.d
## NOTE: supported formats are `.sh`, `.sql` or `.php`
## NOTE: scripts are exclusively executed during the 1st boot of the container
## e.g:
##
# customPostInitScripts:
#   enable-logs.sh: |
#     #!/bin/bash
#     sed -i "s/;logfile/logfile/" /opt/bitnami/redmine/config/configuration.yml
#     ...
customPostInitScripts: {}
## SMTP mail delivery configuration
## ref: https://github.com/bitnami/bitnami-docker-redmine/#smtp-configuration
## @param smtpHost SMTP server host
## @param smtpPort SMTP server port
## @param smtpUser SMTP username
## @param smtpPassword SMTP user password
## @param smtpProtocol SMTP protocol
##
smtpHost: ""
smtpPort: ""
smtpUser: ""
smtpPassword: ""
smtpProtocol: ""
## @param existingSecret Name of existing secret containing Redmine credentials
## NOTE: Must contain key `redmine-password`
## NOTE: When it's set, the `redminePassword` parameter is ignored
##
existingSecret: ""
## @param smtpExistingSecret The name of an existing secret with SMTP credentials
## NOTE: Must contain key `smtp-password`
## NOTE: When it's set, the `smtpPassword` parameter is ignored
##
smtpExistingSecret: ""
## @param allowEmptyPassword Allow the container to be started with blank passwords
##
allowEmptyPassword: false
## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []
## @param extraEnvVars Array with extra environment variables to add to the Redmine container
## e.g:
##
# extraEnvVars:
#   - name: FOO
#     value: "bar"
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
##
extraEnvVarsSecret: ""

## @section Redmine deployment parameters

## @param replicaCount Number of Redmine replicas to deploy
## NOTE: ReadWriteMany PVC(s) are required if replicaCount > 1
##
replicaCount: 1
## @param updateStrategy.type Redmine deployment strategy type
## @param updateStrategy.rollingUpdate Redmine deployment rolling update configuration parameters
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
## NOTE: Set it to `Recreate` if you use a PV that cannot be mounted on multiple pods
## e.g:
##
# updateStrategy:
#  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 25%
#    maxUnavailable: 25%
updateStrategy:
  type: RollingUpdate
  rollingUpdate: {}
## @param schedulerName Alternate scheduler
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name The name of the ServiceAccount to create. Defaults to the `redmine.fullname` macro
##
serviceAccount:
  create: false
  name: ""
## @param hostAliases [array] Redmine pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param extraVolumes Optionally specify extra list of additional volumes for Redmine pods
##
extraVolumes: []
## @param extraVolumeMounts Optionally specify extra list of additional volumeMounts for Redmine container(s)
##
extraVolumeMounts: []
## @param sidecars Add additional sidecar containers to the Redmine pod
## e.g:
##
# sidecars:
#   - name: your-image-name
#     image: your-image
#     imagePullPolicy: Always
#     ports:
#       - name: portname
#         containerPort: 1234
sidecars: []
## @param initContainers Add additional init containers to the Redmine pods
## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
## e.g:
##
## initContainers:
# - name: your-image-name
#    image: your-image
#    imagePullPolicy: Always
#    command: ['sh', '-c', 'copy addons from git and push to /bitnami/redmine/plugins. Should work with extraVolumeMounts and extraVolumes']
initContainers: []
## @param podLabels Extra labels for Redmine pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for Redmine pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## Redmine containers' resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits The resources limits for the Redmine container
## @param resources.requests [object] The requested resources for the Redmine container
##
resources:
  limits: {}
  requests:
    memory: 512Mi
    cpu: 300m
## Container ports
## @param containerPort Redmine HTTP container port
##
containerPort: 3000
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Redmine pods' Security Context
## @param podSecurityContext.fsGroup Set Redmine pod's Security Context fsGroup
##
podSecurityContext:
  enabled: false
  fsGroup: 1001
## Configure Container Security Context (only main container)
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled Redmine containers' Security Context
## @param containerSecurityContext.runAsUser Set Redmine container's Security Context runAsUser
##
containerSecurityContext:
  enabled: false
  runAsUser: 1001
## Configure extra options for Redmine containers' liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.path Path for to check for livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.path Path to check for readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  path: /
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## @param startupProbe.enabled Enable startupProbe
## @param startupProbe.path Path to check for startupProbe
## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
## @param startupProbe.periodSeconds Period seconds for startupProbe
## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
## @param startupProbe.failureThreshold Failure threshold for startupProbe
## @param startupProbe.successThreshold Success threshold for startupProbe
##
startupProbe:
  enabled: false
  path: /
  initialDelaySeconds: 300
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## @param customLivenessProbe Custom livenessProbe that overrides the default one
##
customLivenessProbe: {}
## @param customReadinessProbe Custom readinessProbe that overrides the default one
##
customReadinessProbe: {}
## @param customStartupProbe Custom startupProbe that overrides the default one
##
customStartupProbe: {}

## @section Traffic Exposure Parameters

## Redmine service parameters
##
service:
  ## @param service.type Redmine service type
  ##
  type: LoadBalancer
  ## @param service.port Redmine service HTTP port
  ##
  port: 80
  ## Node ports to expose
  ## @param service.nodePort Node port for HTTP
  ## NOTE: choose port between <30000-32767>
  ##
  nodePort: ""
  ## @param service.clusterIP Redmine service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Redmine service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges Redmine service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ##
  # loadBalancerSourceRanges:
  #   - 10.10.10.0/24
  loadBalancerSourceRanges: []
  ## @param service.externalTrafficPolicy Redmine service external traffic policy
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.annotations Additional custom annotations for Redmine service
  ##
  annotations: {}
  ## @param service.extraPorts Extra port to expose on Redmine service
  ##
  extraPorts: []

## Configure the ingress resource that allows you to access the Redmine installation
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Redmine
  ##
  enabled: false
  ## @param ingress.certManager Add the corresponding annotations for cert-manager integration
  ##
  certManager: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: redmine.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional custom annotations for the ingress record
  ## NOTE: If `ingress.certManager=true`, annotation `kubernetes.io/tls-acme: "true"` will automatically be added
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting `ingress.certManager=true`
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.tls=true` and `ingress.certManager=false`
  ##
  tls: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ##
  # extraHosts:
  #   - name: redmine.local
  #     path: /
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ##
  # extraPaths:
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ##
  # extraTls:
  # - hosts:
  #     - redmine.local
  #   secretName: redmine.local-tls
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ##
  # secrets:
  #   - name: redmine.local-tls
  #     key: |-
  #       -----BEGIN RSA PRIVATE KEY-----
  #       ...
  #       -----END RSA PRIVATE KEY-----
  #     certificate: |-
  #       -----BEGIN CERTIFICATE-----
  #       ...
  #       -----END CERTIFICATE-----
  secrets: []

## @section Persistence Parameters

## Persistence Parameters
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.storageClass Persistent Volume storage class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
  ##
  storageClass: ""
  ## @param persistence.accessModes [array] Persistent Volume access modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Persistent Volume size
  ##
  size: 8Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the podSecurityContext/containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.securityContext.runAsUser Set init container's Security Context runAsUser
  ##
  securityContext:
    runAsUser: 0

## @section Other Parameters

## Redmine Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
## @param podDisruptionBudget.create Enable a Pod Disruption Budget creation
## @param podDisruptionBudget.minAvailable Minimum number/percentage of pods that should remain scheduled
## @param podDisruptionBudget.maxUnavailable Maximum number/percentage of pods that may be made unavailable
##
podDisruptionBudget:
  create: false
  minAvailable: ""
  maxUnavailable: ""

## Redmine Autoscaling configuration
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
## @param autoscaling.enabled Enable Horizontal POD autoscaling for Redmine
## @param autoscaling.minReplicas Minimum number of Redmine replicas
## @param autoscaling.maxReplicas Maximum number of Redmine replicas
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 11
  targetCPU: 50
  targetMemory: 50

## @section Database Parameters

## @param databaseType Redmine database type. Allowed values: `mariadb` and `postgresql`
## ref: https://github.com/bitnami/bitnami-docker-redmine/#environment-variables
##
databaseType: mariadb
## MariaDB chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/mariadb/values.yaml
##
mariadb:
  ## @param mariadb.enabled Whether to deploy a MariaDB server to satisfy the database requirements
  ##
  enabled: true
  ## @param mariadb.architecture MariaDB architecture. Allowed values: `standalone` or `replication`
  ##
  architecture: standalone
  ## @param mariadb.auth.rootPassword MariaDB root password
  ## @param mariadb.auth.username MariaDB username
  ## @param mariadb.auth.password MariaDB password
  ## @param mariadb.auth.existingSecret Name of existing secret object
  ## ref: https://hub.docker.com/_/mariadb/
  ##
  auth:
    rootPassword: ""
    username: bn_redmine
    password: ""
    ## Existing secret with MariaDB credentials
    ## NOTE: When it's set the previous parameters are ignored.
    ##
    # existingSecret: my-secret
    existingSecret: ""
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  primary:
    persistence:
      ## @param mariadb.primary.persistence.enabled Enable MariaDB persistence using PVC
      ##
      enabled: true
      ## @param mariadb.primary.persistence.existingClaim Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template
      ##
      # existingClaim: your-claim
      existingClaim: ""
      ## @param mariadb.primary.persistence.storageClass PVC Storage Class for MariaDB volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      storageClass: ""
      ## @param mariadb.primary.persistence.accessModes [array] PVC Access Mode for MariaDB volume
      ##
      accessModes:
        - ReadWriteOnce
      ## @param mariadb.primary.persistence.size PVC Storage Request for MariaDB volume
      ##
      size: 8Gi
      ## @param mariadb.primary.persistence.hostPath Set path in case you want to use local host path volumes (not recommended in production)
      ##
      hostPath: ""
## PostgreSQL chart configuration
## ref: https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
##
postgresql:
  ## @param postgresql.enabled Whether to deploy a PostgreSQL server to satisfy the database requirements
  ##
  enabled: true
  ## @param postgresql.postgresqlUsername PostgreSQL username
  ## ref: https://hub.docker.com/_/postgres/
  ##
  postgresqlUsername: "bn_redmine"
  ## @param postgresql.postgresqlPassword PostgreSQL password
  ## ref: https://hub.docker.com/_/postgres/
  ##
  postgresqlPassword: ""
  ## @param postgresql.postgresqlDatabase PostgreSQL database
  ## ref: https://github.com/bitnami/bitnami-docker-postgresql/blob/master/README.md#creating-a-database-on-first-run
  ##
  postgresqlDatabase: bitnami_redmine
  ## @param postgresql.existingSecret Name of existing secret object
  ## The secret should contain the following keys:
  ## postgresql-postgres-password (for root user)
  ## postgresql-password (for the unprivileged user)
  ##
  # existingSecret: my-secret
  existingSecret: ""
  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param postgresql.persistence.enabled Enable PostgreSQL persistence using PVC
    ##
    enabled: true
    ## @param postgresql.persistence.existingClaim Provide an existing `PersistentVolumeClaim`, the value is evaluated as a template
    ##
    # existingClaim: your-claim
    existingClaim: ""
    ## @param postgresql.persistence.storageClass PVC Storage Class for PostgreSQL volume
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    storageClass: ""
    ## @param postgresql.persistence.accessMode PVC Access Mode for PostgreSQL volume
    ##
    accessMode: ReadWriteOnce
    ## @param postgresql.persistence.size PVC Storage Request for PostgreSQL volume
    ##
    size: 8Gi
## External Database Configuration
## All of these values are only used when postgresql.enabled is set to false
externalDatabase:
  ## @param externalDatabase.host External Database server host
  ##
  host: ""
  ## @param externalDatabase.port External Database server port
  ##
  port: 5432
  ## @param externalDatabase.user External Database username
  ##
  user: bn_redmine
  ## @param externalDatabase.password External Database user password
  ##
  password: ""
  ## @param externalDatabase.database External Database database name
  ##
  database: bitnami_redmine
  ## @param externalDatabase.existingSecret Use an existing secret for external db password. Must contain the keys `redmine-password` or `mariadb-password` depending on the DB type
  ##
  # existingSecret: my-secret
  existingSecret: ""

## @section Mail Receiver/Cron Job Parameters

## Configure CronJob scheduler for receiving emails and converting them to tasks
## ref: http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails
##
mailReceiver:
  ## @param mailReceiver.enabled Whether to enable scheduled mail-to-task CronJob
  ##
  enabled: false
  ## @param mailReceiver.schedule Kubernetes CronJob schedule
  ##
  schedule: "*/5 * * * *"
  ## @param mailReceiver.suspend Whether to create suspended CronJob
  ##
  suspend: true
  ## @param mailReceiver.podAnnotations Additional pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param mailReceiver.podLabels Additional pod labels
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param mailReceiver.priorityClassName Redmine pods' priority.
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## @param mailReceiver.mailProtocol Mail protocol to use for reading emails. Allowed values: `IMAP` and `POP3`
  ##
  mailProtocol: IMAP
  ## @param mailReceiver.host Server to receive emails from
  ##
  host: ""
  ## @param mailReceiver.port TCP port on the `host`
  ##
  port: 993
  ## @param mailReceiver.username Login to authenticate on the `host`
  ##
  username: ""
  ## @param mailReceiver.password Password to authenticate on the `host`
  ##
  password: ""
  ## @param mailReceiver.ssl Whether use SSL/TLS to connect to the `host`
  ## If true then client will use SSL/TLS
  ##
  ssl: true
  ## @param mailReceiver.startTLS Whether use StartTLS to connect to the `host`
  ## If true then client will use StartTLS
  ##
  startTLS: false
  ## @param mailReceiver.imapFolder IMAP only. Folder to read emails from
  ##
  imapFolder: "INBOX"
  ## @param mailReceiver.moveOnSuccess IMAP only. Folder to move processed emails to
  ## If empty - just leave emails as read
  ##
  moveOnSuccess: ""
  ## @param mailReceiver.moveOnFailure IMAP only. Folder to move emails with processing errors to
  ## If empty - just leave emails as read
  ##
  moveOnFailure: ""
  ## @param mailReceiver.unknownUserAction Action to perform is an email received from unregistered user
  ## ref: http://www.redmine.org/projects/redmine/wiki/RedmineReceivingEmails
  ##
  unknownUserAction: ignore
  ## @param mailReceiver.noPermissionCheck Whether skip permission check during creating a new task
  ## If set to 1 then redmine does not check task creator (source email) permissions for creating a new task
  ## If set to 0 then task creator must have permission to create a new task
  ##
  noPermissionCheck: 0
  ## @param mailReceiver.noAccountNotice Whether send an email to an unregistered user created during a new task creation
  ## 0 - send, 1 - not send
  ##
  noAccountNotice: 1
  ## @param mailReceiver.defaultGroup Defines a group list to add created user to
  ## Groups must be enumerated as names separated by comma without spaces
  ##
  defaultGroup: ""
  ## @param mailReceiver.project Defines identifier of the target project for a new task
  ##
  project: ""
  ## @param mailReceiver.projectFromSubaddress Defines email address to select project from subaddress
  ##
  projectFromSubaddress: ""
  ## @param mailReceiver.status Defines a new task status
  ##
  status: ""
  ## @param mailReceiver.tracker Defines a new task tracker
  ##
  tracker: ""
  ## @param mailReceiver.category Defines a new task category
  ##
  category: ""
  ## @param mailReceiver.priority Defines a new task priority
  ##
  priority: ""
  ## @param mailReceiver.assignedTo Defines a new task assignee
  ##
  assignedTo: ""
  ## @param mailReceiver.allowOverride Defines if email content is allowed to set attributes values. Values is a comma separated list of attributes or `all` to allow all attributes
  ##
  allowOverride: ""
  ## @param mailReceiver.extraEnvVars Extra environment variables to be set on mailReceiver container
  ## For example:
  ##
  extraEnvVars: []
  #  - name: BEARER_AUTH
  #    value: "true"
  ## @param mailReceiver.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param mailReceiver.extraEnvVarsSecret Name of existing Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param mailReceiver.extraVolumes Optionally specify extra list of additional volumes for mailReceiver container
  ##
  extraVolumes: []
  ## @param mailReceiver.extraVolumeMounts Optionally specify extra list of additional volumeMounts for mailReceiver container
  ##
  extraVolumeMounts: []
  ## @param mailReceiver.command Override default container command (useful when using custom images)
  ##
  command: ["bash"]
  ## @param mailReceiver.args Override default container args (useful when using custom images)
  ##
  args: ["-c", "/cj/receive.sh"]
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param mailReceiver.podSecurityContext.enabled Enabled Redmine pods' Security Context
  ## @param mailReceiver.podSecurityContext.fsGroup Set Redmine pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## @param
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param mailReceiver.containerSecurityContext.enabled mailReceiver Container securityContext
  ## @param mailReceiver.containerSecurityContext.runAsUser User ID for the mailReceiver container
  ## @param mailReceiver.containerSecurityContext.runAsNonRoot Whether to run the mailReceiver container as a non-root user
  ##
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  ## @param mailReceiver.initContainers Add additional init containers to the mailReceiver pods
  ## Example:
  ##
  # initContainers:
  #   - name: your-image-name
  #     image: your-image
  #     imagePullPolicy: Always
  #     ports:
  #       - name: portname
  #         containerPort: 1234
  #
  initContainers: []
  ## @param mailReceiver.sidecars Add additional sidecar containers to the mailReceiver pods
  ## Example:
  ##
  # sidecars:
  #   - name: your-image-name
  #     image: your-image
  #     imagePullPolicy: Always
  #     ports:
  #       - name: portname
  #         containerPort: 1234
  #
  sidecars: []
  ## @param mailReceiver.podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAffinityPreset: ""
  ## @param mailReceiver.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ## Allowed values: soft, hard
  ##
  podAntiAffinityPreset: soft
  ## @param mailReceiver.nodeAffinityPreset.type Node affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## @param mailReceiver.nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set.
  ## @param mailReceiver.nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## Allowed values: soft, hard
    ##
    type: ""
    ## Node label key to match
    ## E.g.
    ##
    # key: "kubernetes.io/e2e-az-name"
    key: ""
    ## Node label values to match
    ## E.g.
    ##
    # values:
    #   - e2e-az1
    #   - e2e-az2
    values: []
  ## @param mailReceiver.affinity Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param mailReceiver.nodeSelector Node labels for pod assignment
  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param mailReceiver.tolerations Tolerations for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

## @section Custom Certificates parameters

## Add custom certificates and certificate authorities to redmine container
##
certificates:
  ## @param certificates.customCertificate.certificateSecret Secret containing the certificate and key to add
  ## @param certificates.customCertificate.certificateLocation Location in the container to store the certificate
  ## @param certificates.customCertificate.keyLocation Location in the container to store the private key
  ## @param certificates.customCertificate.chainLocation Location in the container to store the certificate chain
  ##
  customCertificate:
    certificateSecret: ""
    ## @param certificates.customCertificate.chainSecret.name Name of the secret containing the certificate chain
    ## @param certificates.customCertificate.chainSecret.key Key of the certificate chain file inside the secret
    chainSecret:
      # e.g.:
      # name: secret-key
      name: ""
      # e.g.:
      # key: secret-key
      key: ""
    certificateLocation: /etc/ssl/certs/ssl-cert-snakeoil.pem
    keyLocation: /etc/ssl/private/ssl-cert-snakeoil.key
    chainLocation: /etc/ssl/certs/mychain.pem
  ## @param certificates.customCA [array] Defines a list of secrets to import into the container trust store
  ##
  customCA: []
  # - secret: custom-CA
  # - secret: more-custom-CAs
  ## @param certificates.image.registry Redmine image registry
  ## @param certificates.image.repository Redmine image repository
  ## @param certificates.image.tag Redmine image tag (immutable tags are recommended)
  ## @param certificates.image.pullPolicy Redmine image pull policy
  ## @param certificates.image.pullSecrets [array] Redmine image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 10-debian-10-r203
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    pullSecrets: []
    # - myRegistryKeySecretName
  ## @param certificates.extraEnvVars [array] Container sidecar extra environment variables (e.g. proxy)
  ##
  extraEnvVars: []
  # - name: myvar
  #   value: myval
